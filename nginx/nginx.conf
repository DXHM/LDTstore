# NGINX Config for ldtstore.com.cn Rev 0.4.1
# Copyright 2021 stackinspector. MIT Lincese.

user nginx;
pcre_jit on;
events {}

error_log logs/error debug;

http {

    # generated from the following argument list string and JavaScript code
    # 'time_iso8601  remote_addr remote_user  request http_referer http_user_agent http_accept http_x_forwarded_for http_cookie
    #   status bytes_sent body_bytes_sent  connection connection_requests'
    # `log_format json_detailed escape=json '{` + args.replace(/  /g, ' ').split(' ').map(arg => `"${arg}":"$${arg}"`).join(`,`) + `}';`
    log_format json_detailed escape=json '{"time_iso8601":"$time_iso8601","remote_addr":"$remote_addr","remote_user":"$remote_user","request":"$request","http_referer":"$http_referer","http_user_agent":"$http_user_agent","http_accept":"$http_accept","http_x_forwarded_for":"$http_x_forwarded_for","http_cookie":"$http_cookie","status":"$status","bytes_sent":"$bytes_sent","body_bytes_sent":"$body_bytes_sent","connection":"$connection","connection_requests":"$connection_requests"}';
    access_log logs/access json_detailed;

    # performance optimizations
    sendfile   on;
    tcp_nopush on;
    gzip       on;

    # traffic limit
    limit_req_zone $binary_remote_addr zone=global:128m rate=10r/s;
    limit_req_status 429;

    # bilibili bfs proxy
    upstream bfs {
        server i0.hdslb.com:443 weight=1;
        server i1.hdslb.com:443 weight=1;
        server i2.hdslb.com:443 weight=1;
    }

    server {

        # forced redirection from http to https
        listen      80;
        listen      [::]:80;
        server_name ldtstore.com.cn;
# BEGIN omit if http only (for testing purposes)

        # traffic limit
        limit_req zone=global;

        return 301 https://$server_name$request_uri;

    }

    server {

        listen      443 ssl http2;
        listen      [::]:443 ssl http2;
        server_name ldtstore.com.cn;

        # ssl certificate files
        ssl_certificate     /server/cert/ldtstore.com.cn.pem;
        ssl_certificate_key /server/cert/ldtstore.com.cn.key;
        # file generated by: `openssl dhparam -out /server/cert/dh4096.pem 4096`
        ssl_dhparam         /server/cert/dh4096.pem;

        # ssl configurations
        ssl_protocols       TLSv1.2 TLSv1.3;
        # cipher config generated by: https://ssl-config.mozilla.org/#server=nginx&version=1.20.0&config=intermediate&openssl=1.1.1d&guideline=5.6
        ssl_ciphers         ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
        ssl_session_cache   shared:SSL:10m;
        # currently there is no need to configure DNS CAA and OSCP Stapling

        # hsts support
        add_header Strict-Transport-Security "max-age=31536000; preload" always;
# END omit if http only (for testing purposes)

        # traffic limit
        limit_req zone=global;

        # files
        root /server/wwwroot;
        index index.html;

        # favicon
        location = /favicon.ico {
            return 307 https://cdn.jsdelivr.net/gh/stackinspector/ldtstore-assert/image/shared/laodi-64px.png;
        }

        # redirecting server
        location /r/ {
            proxy_buffering  off;
            proxy_pass       http://127.0.0.1:10305/;
        }

        # static servers
        location /s1/ {
            return 307 https://www.841973620.net:20610$request_uri;
        }

        # bilibili bfs proxy
        location /bfs/ {
            proxy_buffering  off;
            proxy_pass       https://bfs/bfs/;

            proxy_set_header  Referer "https://bilibili.com/";
            proxy_hide_header Origin;
        }

    }

}
